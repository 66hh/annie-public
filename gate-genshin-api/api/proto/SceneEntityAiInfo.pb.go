// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.7.0
// source: SceneEntityAiInfo.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SceneEntityAiInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsAiOpen        bool              `protobuf:"varint,1,opt,name=is_ai_open,json=isAiOpen,proto3" json:"is_ai_open,omitempty"`
	BornPos         *Vector           `protobuf:"bytes,2,opt,name=born_pos,json=bornPos,proto3" json:"born_pos,omitempty"`
	SkillCdMap      map[uint32]uint32 `protobuf:"bytes,3,rep,name=skill_cd_map,json=skillCdMap,proto3" json:"skill_cd_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	ServantInfo     *ServantInfo      `protobuf:"bytes,4,opt,name=servant_info,json=servantInfo,proto3" json:"servant_info,omitempty"`
	AiThreatMap     map[uint32]uint32 `protobuf:"bytes,5,rep,name=ai_threat_map,json=aiThreatMap,proto3" json:"ai_threat_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	SkillGroupCdMap map[uint32]uint32 `protobuf:"bytes,6,rep,name=skill_group_cd_map,json=skillGroupCdMap,proto3" json:"skill_group_cd_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	CurTactic       uint32            `protobuf:"varint,7,opt,name=cur_tactic,json=curTactic,proto3" json:"cur_tactic,omitempty"`
}

func (x *SceneEntityAiInfo) Reset() {
	*x = SceneEntityAiInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneEntityAiInfo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SceneEntityAiInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneEntityAiInfo) ProtoMessage() {}

func (x *SceneEntityAiInfo) ProtoReflect() protoreflect.Message {
	mi := &file_SceneEntityAiInfo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneEntityAiInfo.ProtoReflect.Descriptor instead.
func (*SceneEntityAiInfo) Descriptor() ([]byte, []int) {
	return file_SceneEntityAiInfo_proto_rawDescGZIP(), []int{0}
}

func (x *SceneEntityAiInfo) GetIsAiOpen() bool {
	if x != nil {
		return x.IsAiOpen
	}
	return false
}

func (x *SceneEntityAiInfo) GetBornPos() *Vector {
	if x != nil {
		return x.BornPos
	}
	return nil
}

func (x *SceneEntityAiInfo) GetSkillCdMap() map[uint32]uint32 {
	if x != nil {
		return x.SkillCdMap
	}
	return nil
}

func (x *SceneEntityAiInfo) GetServantInfo() *ServantInfo {
	if x != nil {
		return x.ServantInfo
	}
	return nil
}

func (x *SceneEntityAiInfo) GetAiThreatMap() map[uint32]uint32 {
	if x != nil {
		return x.AiThreatMap
	}
	return nil
}

func (x *SceneEntityAiInfo) GetSkillGroupCdMap() map[uint32]uint32 {
	if x != nil {
		return x.SkillGroupCdMap
	}
	return nil
}

func (x *SceneEntityAiInfo) GetCurTactic() uint32 {
	if x != nil {
		return x.CurTactic
	}
	return 0
}

var File_SceneEntityAiInfo_proto protoreflect.FileDescriptor

var file_SceneEntityAiInfo_proto_rawDesc = []byte{
	0x0a, 0x17, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x41, 0x69, 0x49,
	0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x0c, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11,
	0x53, 0x65, 0x72, 0x76, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xeb, 0x04, 0x0a, 0x11, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x41, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x61, 0x69,
	0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41,
	0x69, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x28, 0x0a, 0x08, 0x62, 0x6f, 0x72, 0x6e, 0x5f, 0x70, 0x6f,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x07, 0x62, 0x6f, 0x72, 0x6e, 0x50, 0x6f, 0x73, 0x12,
	0x4a, 0x0a, 0x0c, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x63, 0x64, 0x5f, 0x6d, 0x61, 0x70, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63,
	0x65, 0x6e, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x41, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x2e,
	0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x43, 0x64, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0a, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x43, 0x64, 0x4d, 0x61, 0x70, 0x12, 0x35, 0x0a, 0x0c, 0x73,
	0x65, 0x72, 0x76, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x61, 0x6e,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x61, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x4d, 0x0a, 0x0d, 0x61, 0x69, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x61, 0x74, 0x5f,
	0x6d, 0x61, 0x70, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x41, 0x69, 0x49,
	0x6e, 0x66, 0x6f, 0x2e, 0x41, 0x69, 0x54, 0x68, 0x72, 0x65, 0x61, 0x74, 0x4d, 0x61, 0x70, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x61, 0x69, 0x54, 0x68, 0x72, 0x65, 0x61, 0x74, 0x4d, 0x61,
	0x70, 0x12, 0x5a, 0x0a, 0x12, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x63, 0x64, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x41, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x43, 0x64, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x73, 0x6b,
	0x69, 0x6c, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x64, 0x4d, 0x61, 0x70, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x75, 0x72, 0x5f, 0x74, 0x61, 0x63, 0x74, 0x69, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x63, 0x75, 0x72, 0x54, 0x61, 0x63, 0x74, 0x69, 0x63, 0x1a, 0x3d, 0x0a, 0x0f,
	0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x43, 0x64, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3e, 0x0a, 0x10, 0x41,
	0x69, 0x54, 0x68, 0x72, 0x65, 0x61, 0x74, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x42, 0x0a, 0x14, 0x53,
	0x6b, 0x69, 0x6c, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x64, 0x4d, 0x61, 0x70, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42,
	0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_SceneEntityAiInfo_proto_rawDescOnce sync.Once
	file_SceneEntityAiInfo_proto_rawDescData = file_SceneEntityAiInfo_proto_rawDesc
)

func file_SceneEntityAiInfo_proto_rawDescGZIP() []byte {
	file_SceneEntityAiInfo_proto_rawDescOnce.Do(func() {
		file_SceneEntityAiInfo_proto_rawDescData = protoimpl.X.CompressGZIP(file_SceneEntityAiInfo_proto_rawDescData)
	})
	return file_SceneEntityAiInfo_proto_rawDescData
}

var file_SceneEntityAiInfo_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_SceneEntityAiInfo_proto_goTypes = []interface{}{
	(*SceneEntityAiInfo)(nil), // 0: proto.SceneEntityAiInfo
	nil,                       // 1: proto.SceneEntityAiInfo.SkillCdMapEntry
	nil,                       // 2: proto.SceneEntityAiInfo.AiThreatMapEntry
	nil,                       // 3: proto.SceneEntityAiInfo.SkillGroupCdMapEntry
	(*Vector)(nil),            // 4: proto.Vector
	(*ServantInfo)(nil),       // 5: proto.ServantInfo
}
var file_SceneEntityAiInfo_proto_depIdxs = []int32{
	4, // 0: proto.SceneEntityAiInfo.born_pos:type_name -> proto.Vector
	1, // 1: proto.SceneEntityAiInfo.skill_cd_map:type_name -> proto.SceneEntityAiInfo.SkillCdMapEntry
	5, // 2: proto.SceneEntityAiInfo.servant_info:type_name -> proto.ServantInfo
	2, // 3: proto.SceneEntityAiInfo.ai_threat_map:type_name -> proto.SceneEntityAiInfo.AiThreatMapEntry
	3, // 4: proto.SceneEntityAiInfo.skill_group_cd_map:type_name -> proto.SceneEntityAiInfo.SkillGroupCdMapEntry
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_SceneEntityAiInfo_proto_init() }
func file_SceneEntityAiInfo_proto_init() {
	if File_SceneEntityAiInfo_proto != nil {
		return
	}
	file_Vector_proto_init()
	file_ServantInfo_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_SceneEntityAiInfo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SceneEntityAiInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_SceneEntityAiInfo_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_SceneEntityAiInfo_proto_goTypes,
		DependencyIndexes: file_SceneEntityAiInfo_proto_depIdxs,
		MessageInfos:      file_SceneEntityAiInfo_proto_msgTypes,
	}.Build()
	File_SceneEntityAiInfo_proto = out.File
	file_SceneEntityAiInfo_proto_rawDesc = nil
	file_SceneEntityAiInfo_proto_goTypes = nil
	file_SceneEntityAiInfo_proto_depIdxs = nil
}
