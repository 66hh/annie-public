// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.7.0
// source: DungeonChallengeFinishNotify.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DungeonChallengeFinishNotify_CmdId int32

const (
	DungeonChallengeFinishNotify_NONE             DungeonChallengeFinishNotify_CmdId = 0
	DungeonChallengeFinishNotify_ENET_CHANNEL_ID  DungeonChallengeFinishNotify_CmdId = 0
	DungeonChallengeFinishNotify_ENET_IS_RELIABLE DungeonChallengeFinishNotify_CmdId = 1
	DungeonChallengeFinishNotify_CMD_ID           DungeonChallengeFinishNotify_CmdId = 986
)

// Enum value maps for DungeonChallengeFinishNotify_CmdId.
var (
	DungeonChallengeFinishNotify_CmdId_name = map[int32]string{
		0: "NONE",
		// Duplicate value: 0: "ENET_CHANNEL_ID",
		1:   "ENET_IS_RELIABLE",
		986: "CMD_ID",
	}
	DungeonChallengeFinishNotify_CmdId_value = map[string]int32{
		"NONE":             0,
		"ENET_CHANNEL_ID":  0,
		"ENET_IS_RELIABLE": 1,
		"CMD_ID":           986,
	}
)

func (x DungeonChallengeFinishNotify_CmdId) Enum() *DungeonChallengeFinishNotify_CmdId {
	p := new(DungeonChallengeFinishNotify_CmdId)
	*p = x
	return p
}

func (x DungeonChallengeFinishNotify_CmdId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DungeonChallengeFinishNotify_CmdId) Descriptor() protoreflect.EnumDescriptor {
	return file_DungeonChallengeFinishNotify_proto_enumTypes[0].Descriptor()
}

func (DungeonChallengeFinishNotify_CmdId) Type() protoreflect.EnumType {
	return &file_DungeonChallengeFinishNotify_proto_enumTypes[0]
}

func (x DungeonChallengeFinishNotify_CmdId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DungeonChallengeFinishNotify_CmdId.Descriptor instead.
func (DungeonChallengeFinishNotify_CmdId) EnumDescriptor() ([]byte, []int) {
	return file_DungeonChallengeFinishNotify_proto_rawDescGZIP(), []int{0, 0}
}

type DungeonChallengeFinishNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Detail:
	//	*DungeonChallengeFinishNotify_ChannellerSlabLoopDungeonResultInfo
	//	*DungeonChallengeFinishNotify_EffigyChallengeDungeonResultInfo
	Detail                 isDungeonChallengeFinishNotify_Detail `protobuf_oneof:"Detail"`
	ChallengeIndex         uint32                                `protobuf:"varint,11,opt,name=challenge_index,json=challengeIndex,proto3" json:"challenge_index,omitempty"`
	IsSuccess              bool                                  `protobuf:"varint,4,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"`
	IsNewRecord            bool                                  `protobuf:"varint,2,opt,name=is_new_record,json=isNewRecord,proto3" json:"is_new_record,omitempty"`
	ChallengeRecordType    uint32                                `protobuf:"varint,10,opt,name=challenge_record_type,json=challengeRecordType,proto3" json:"challenge_record_type,omitempty"`
	CurrentValue           uint32                                `protobuf:"varint,12,opt,name=current_value,json=currentValue,proto3" json:"current_value,omitempty"`
	StrengthenPointDataMap map[uint32]*StrengthenPointData       `protobuf:"bytes,13,rep,name=strengthen_point_data_map,json=strengthenPointDataMap,proto3" json:"strengthen_point_data_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *DungeonChallengeFinishNotify) Reset() {
	*x = DungeonChallengeFinishNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DungeonChallengeFinishNotify_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DungeonChallengeFinishNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DungeonChallengeFinishNotify) ProtoMessage() {}

func (x *DungeonChallengeFinishNotify) ProtoReflect() protoreflect.Message {
	mi := &file_DungeonChallengeFinishNotify_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DungeonChallengeFinishNotify.ProtoReflect.Descriptor instead.
func (*DungeonChallengeFinishNotify) Descriptor() ([]byte, []int) {
	return file_DungeonChallengeFinishNotify_proto_rawDescGZIP(), []int{0}
}

func (m *DungeonChallengeFinishNotify) GetDetail() isDungeonChallengeFinishNotify_Detail {
	if m != nil {
		return m.Detail
	}
	return nil
}

func (x *DungeonChallengeFinishNotify) GetChannellerSlabLoopDungeonResultInfo() *ChannellerSlabLoopDungeonResultInfo {
	if x, ok := x.GetDetail().(*DungeonChallengeFinishNotify_ChannellerSlabLoopDungeonResultInfo); ok {
		return x.ChannellerSlabLoopDungeonResultInfo
	}
	return nil
}

func (x *DungeonChallengeFinishNotify) GetEffigyChallengeDungeonResultInfo() *EffigyChallengeDungeonResultInfo {
	if x, ok := x.GetDetail().(*DungeonChallengeFinishNotify_EffigyChallengeDungeonResultInfo); ok {
		return x.EffigyChallengeDungeonResultInfo
	}
	return nil
}

func (x *DungeonChallengeFinishNotify) GetChallengeIndex() uint32 {
	if x != nil {
		return x.ChallengeIndex
	}
	return 0
}

func (x *DungeonChallengeFinishNotify) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

func (x *DungeonChallengeFinishNotify) GetIsNewRecord() bool {
	if x != nil {
		return x.IsNewRecord
	}
	return false
}

func (x *DungeonChallengeFinishNotify) GetChallengeRecordType() uint32 {
	if x != nil {
		return x.ChallengeRecordType
	}
	return 0
}

func (x *DungeonChallengeFinishNotify) GetCurrentValue() uint32 {
	if x != nil {
		return x.CurrentValue
	}
	return 0
}

func (x *DungeonChallengeFinishNotify) GetStrengthenPointDataMap() map[uint32]*StrengthenPointData {
	if x != nil {
		return x.StrengthenPointDataMap
	}
	return nil
}

type isDungeonChallengeFinishNotify_Detail interface {
	isDungeonChallengeFinishNotify_Detail()
}

type DungeonChallengeFinishNotify_ChannellerSlabLoopDungeonResultInfo struct {
	ChannellerSlabLoopDungeonResultInfo *ChannellerSlabLoopDungeonResultInfo `protobuf:"bytes,1758,opt,name=channeller_slab_loop_dungeon_result_info,json=channellerSlabLoopDungeonResultInfo,proto3,oneof"`
}

type DungeonChallengeFinishNotify_EffigyChallengeDungeonResultInfo struct {
	EffigyChallengeDungeonResultInfo *EffigyChallengeDungeonResultInfo `protobuf:"bytes,913,opt,name=effigy_challenge_dungeon_result_info,json=effigyChallengeDungeonResultInfo,proto3,oneof"`
}

func (*DungeonChallengeFinishNotify_ChannellerSlabLoopDungeonResultInfo) isDungeonChallengeFinishNotify_Detail() {
}

func (*DungeonChallengeFinishNotify_EffigyChallengeDungeonResultInfo) isDungeonChallengeFinishNotify_Detail() {
}

var File_DungeonChallengeFinishNotify_proto protoreflect.FileDescriptor

var file_DungeonChallengeFinishNotify_proto_rawDesc = []byte{
	0x0a, 0x22, 0x44, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e,
	0x67, 0x65, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x29, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x53, 0x6c, 0x61, 0x62, 0x4c, 0x6f, 0x6f, 0x70, 0x44,
	0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x26, 0x45, 0x66, 0x66, 0x69, 0x67, 0x79, 0x43, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x44, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19,
	0x53, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x65, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa2, 0x06, 0x0a, 0x1c, 0x44, 0x75,
	0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x46, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x84, 0x01, 0x0a, 0x28, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x73, 0x6c, 0x61, 0x62, 0x5f, 0x6c,
	0x6f, 0x6f, 0x70, 0x5f, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xde, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x6c, 0x65,
	0x72, 0x53, 0x6c, 0x61, 0x62, 0x4c, 0x6f, 0x6f, 0x70, 0x44, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x23, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x53, 0x6c, 0x61, 0x62, 0x4c, 0x6f, 0x6f, 0x70,
	0x44, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x7a, 0x0a, 0x24, 0x65, 0x66, 0x66, 0x69, 0x67, 0x79, 0x5f, 0x63, 0x68, 0x61, 0x6c,
	0x6c, 0x65, 0x6e, 0x67, 0x65, 0x5f, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x5f, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x91, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x66, 0x66, 0x69, 0x67, 0x79, 0x43,
	0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x44, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x20, 0x65, 0x66, 0x66,
	0x69, 0x67, 0x79, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x44, 0x75, 0x6e, 0x67,
	0x65, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x27, 0x0a,
	0x0f, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67,
	0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x6e, 0x65, 0x77, 0x5f,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73,
	0x4e, 0x65, 0x77, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x68, 0x61,
	0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65,
	0x6e, 0x67, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x7a, 0x0a, 0x19, 0x73, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x65, 0x6e,
	0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x70, 0x18,
	0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x75,
	0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x46, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x65, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x61,
	0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x16, 0x73, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x65, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x70, 0x1a, 0x65,
	0x0a, 0x1b, 0x53, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x65, 0x6e, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x65,
	0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x4d, 0x0a, 0x05, 0x43, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x08,
	0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x45, 0x54,
	0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a,
	0x10, 0x45, 0x4e, 0x45, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x49, 0x41, 0x42, 0x4c,
	0x45, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x44, 0x10, 0xda, 0x07,
	0x1a, 0x02, 0x10, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x0a,
	0x5a, 0x08, 0x2e, 0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_DungeonChallengeFinishNotify_proto_rawDescOnce sync.Once
	file_DungeonChallengeFinishNotify_proto_rawDescData = file_DungeonChallengeFinishNotify_proto_rawDesc
)

func file_DungeonChallengeFinishNotify_proto_rawDescGZIP() []byte {
	file_DungeonChallengeFinishNotify_proto_rawDescOnce.Do(func() {
		file_DungeonChallengeFinishNotify_proto_rawDescData = protoimpl.X.CompressGZIP(file_DungeonChallengeFinishNotify_proto_rawDescData)
	})
	return file_DungeonChallengeFinishNotify_proto_rawDescData
}

var file_DungeonChallengeFinishNotify_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_DungeonChallengeFinishNotify_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_DungeonChallengeFinishNotify_proto_goTypes = []interface{}{
	(DungeonChallengeFinishNotify_CmdId)(0), // 0: proto.DungeonChallengeFinishNotify.CmdId
	(*DungeonChallengeFinishNotify)(nil),    // 1: proto.DungeonChallengeFinishNotify
	nil,                                     // 2: proto.DungeonChallengeFinishNotify.StrengthenPointDataMapEntry
	(*ChannellerSlabLoopDungeonResultInfo)(nil), // 3: proto.ChannellerSlabLoopDungeonResultInfo
	(*EffigyChallengeDungeonResultInfo)(nil),    // 4: proto.EffigyChallengeDungeonResultInfo
	(*StrengthenPointData)(nil),                 // 5: proto.StrengthenPointData
}
var file_DungeonChallengeFinishNotify_proto_depIdxs = []int32{
	3, // 0: proto.DungeonChallengeFinishNotify.channeller_slab_loop_dungeon_result_info:type_name -> proto.ChannellerSlabLoopDungeonResultInfo
	4, // 1: proto.DungeonChallengeFinishNotify.effigy_challenge_dungeon_result_info:type_name -> proto.EffigyChallengeDungeonResultInfo
	2, // 2: proto.DungeonChallengeFinishNotify.strengthen_point_data_map:type_name -> proto.DungeonChallengeFinishNotify.StrengthenPointDataMapEntry
	5, // 3: proto.DungeonChallengeFinishNotify.StrengthenPointDataMapEntry.value:type_name -> proto.StrengthenPointData
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_DungeonChallengeFinishNotify_proto_init() }
func file_DungeonChallengeFinishNotify_proto_init() {
	if File_DungeonChallengeFinishNotify_proto != nil {
		return
	}
	file_ChannellerSlabLoopDungeonResultInfo_proto_init()
	file_EffigyChallengeDungeonResultInfo_proto_init()
	file_StrengthenPointData_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_DungeonChallengeFinishNotify_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DungeonChallengeFinishNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_DungeonChallengeFinishNotify_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*DungeonChallengeFinishNotify_ChannellerSlabLoopDungeonResultInfo)(nil),
		(*DungeonChallengeFinishNotify_EffigyChallengeDungeonResultInfo)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_DungeonChallengeFinishNotify_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_DungeonChallengeFinishNotify_proto_goTypes,
		DependencyIndexes: file_DungeonChallengeFinishNotify_proto_depIdxs,
		EnumInfos:         file_DungeonChallengeFinishNotify_proto_enumTypes,
		MessageInfos:      file_DungeonChallengeFinishNotify_proto_msgTypes,
	}.Build()
	File_DungeonChallengeFinishNotify_proto = out.File
	file_DungeonChallengeFinishNotify_proto_rawDesc = nil
	file_DungeonChallengeFinishNotify_proto_goTypes = nil
	file_DungeonChallengeFinishNotify_proto_depIdxs = nil
}
