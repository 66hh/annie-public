// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.7.0
// source: ActivityInfo.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ActivityInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Detail:
	//	*ActivityInfo_SamLampInfo
	//	*ActivityInfo_CrucibleInfo
	//	*ActivityInfo_SalesmanInfo
	//	*ActivityInfo_TrialAvatarInfo
	//	*ActivityInfo_DeliveryInfo
	//	*ActivityInfo_AsterInfo
	//	*ActivityInfo_FlightInfo
	//	*ActivityInfo_DragonSpineInfo
	//	*ActivityInfo_EffigyInfo
	//	*ActivityInfo_TreasureMapInfo
	//	*ActivityInfo_BlessingInfo
	//	*ActivityInfo_SeaLampInfo
	//	*ActivityInfo_ExpeditionInfo
	//	*ActivityInfo_ArenaChallengeInfo
	//	*ActivityInfo_FleurFairInfo
	//	*ActivityInfo_WaterSpiritInfo
	//	*ActivityInfo_ChallnelerSlabInfo
	//	*ActivityInfo_MistTrialActivityInfo
	//	*ActivityInfo_HideAndSeekInfo
	//	*ActivityInfo_FindHilichurlInfo
	//	*ActivityInfo_SummerTimeInfo
	//	*ActivityInfo_BuoyantCombatInfo
	//	*ActivityInfo_EchoShellInfo
	//	*ActivityInfo_BounceConjuringInfo
	//	*ActivityInfo_BlitzRushInfo
	//	*ActivityInfo_ChessInfo
	//	*ActivityInfo_SumoInfo
	//	*ActivityInfo_MoonfinTrialInfo
	//	*ActivityInfo_LunaRiteInfo
	//	*ActivityInfo_PlantFlowerInfo
	//	*ActivityInfo_MusicGameInfo
	//	*ActivityInfo_RoguelikeDungoenInfo
	//	*ActivityInfo_DigInfo
	Detail                 isActivityInfo_Detail  `protobuf_oneof:"Detail"`
	ActivityId             uint32                 `protobuf:"varint,12,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	ScheduleId             uint32                 `protobuf:"varint,10,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	BeginTime              uint32                 `protobuf:"varint,13,opt,name=begin_time,json=beginTime,proto3" json:"begin_time,omitempty"`
	EndTime                uint32                 `protobuf:"varint,11,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	ActivityType           uint32                 `protobuf:"varint,8,opt,name=activity_type,json=activityType,proto3" json:"activity_type,omitempty"`
	IsPlayOpenAnim         bool                   `protobuf:"varint,14,opt,name=is_play_open_anim,json=isPlayOpenAnim,proto3" json:"is_play_open_anim,omitempty"`
	IsFinished             bool                   `protobuf:"varint,7,opt,name=is_finished,json=isFinished,proto3" json:"is_finished,omitempty"`
	IsStarting             bool                   `protobuf:"varint,9,opt,name=is_starting,json=isStarting,proto3" json:"is_starting,omitempty"`
	WatcherInfoList        []*ActivityWatcherInfo `protobuf:"bytes,4,rep,name=watcher_info_list,json=watcherInfoList,proto3" json:"watcher_info_list,omitempty"`
	MeetCondList           []uint32               `protobuf:"varint,15,rep,packed,name=meet_cond_list,json=meetCondList,proto3" json:"meet_cond_list,omitempty"`
	ExpireCondList         []uint32               `protobuf:"varint,1,rep,packed,name=expire_cond_list,json=expireCondList,proto3" json:"expire_cond_list,omitempty"`
	SelectedAvatarRewardId uint32                 `protobuf:"varint,1394,opt,name=selected_avatar_reward_id,json=selectedAvatarRewardId,proto3" json:"selected_avatar_reward_id,omitempty"`
	ActivityCoinMap        map[uint32]uint32      `protobuf:"bytes,1648,rep,name=activity_coin_map,json=activityCoinMap,proto3" json:"activity_coin_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	ScoreLimit             uint32                 `protobuf:"varint,1187,opt,name=score_limit,json=scoreLimit,proto3" json:"score_limit,omitempty"`
	CurScore               uint32                 `protobuf:"varint,527,opt,name=cur_score,json=curScore,proto3" json:"cur_score,omitempty"`
	TakenRewardList        []uint32               `protobuf:"varint,1262,rep,packed,name=taken_reward_list,json=takenRewardList,proto3" json:"taken_reward_list,omitempty"`
	IsHidden               bool                   `protobuf:"varint,110,opt,name=is_hidden,json=isHidden,proto3" json:"is_hidden,omitempty"`
	FirstDayStartTime      uint32                 `protobuf:"varint,144,opt,name=first_day_start_time,json=firstDayStartTime,proto3" json:"first_day_start_time,omitempty"`
}

func (x *ActivityInfo) Reset() {
	*x = ActivityInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityInfo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityInfo) ProtoMessage() {}

func (x *ActivityInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityInfo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityInfo.ProtoReflect.Descriptor instead.
func (*ActivityInfo) Descriptor() ([]byte, []int) {
	return file_ActivityInfo_proto_rawDescGZIP(), []int{0}
}

func (m *ActivityInfo) GetDetail() isActivityInfo_Detail {
	if m != nil {
		return m.Detail
	}
	return nil
}

func (x *ActivityInfo) GetSamLampInfo() *ActivityNullDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_SamLampInfo); ok {
		return x.SamLampInfo
	}
	return nil
}

func (x *ActivityInfo) GetCrucibleInfo() *ActivityNullDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_CrucibleInfo); ok {
		return x.CrucibleInfo
	}
	return nil
}

func (x *ActivityInfo) GetSalesmanInfo() *ActivityNullDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_SalesmanInfo); ok {
		return x.SalesmanInfo
	}
	return nil
}

func (x *ActivityInfo) GetTrialAvatarInfo() *ActivityNullDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_TrialAvatarInfo); ok {
		return x.TrialAvatarInfo
	}
	return nil
}

func (x *ActivityInfo) GetDeliveryInfo() *ActivityNullDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_DeliveryInfo); ok {
		return x.DeliveryInfo
	}
	return nil
}

func (x *ActivityInfo) GetAsterInfo() *ActivityNullDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_AsterInfo); ok {
		return x.AsterInfo
	}
	return nil
}

func (x *ActivityInfo) GetFlightInfo() *ActivityNullDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_FlightInfo); ok {
		return x.FlightInfo
	}
	return nil
}

func (x *ActivityInfo) GetDragonSpineInfo() *ActivityNullDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_DragonSpineInfo); ok {
		return x.DragonSpineInfo
	}
	return nil
}

func (x *ActivityInfo) GetEffigyInfo() *ActivityNullDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_EffigyInfo); ok {
		return x.EffigyInfo
	}
	return nil
}

func (x *ActivityInfo) GetTreasureMapInfo() *ActivityNullDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_TreasureMapInfo); ok {
		return x.TreasureMapInfo
	}
	return nil
}

func (x *ActivityInfo) GetBlessingInfo() *ActivityNullDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_BlessingInfo); ok {
		return x.BlessingInfo
	}
	return nil
}

func (x *ActivityInfo) GetSeaLampInfo() *ActivityNullDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_SeaLampInfo); ok {
		return x.SeaLampInfo
	}
	return nil
}

func (x *ActivityInfo) GetExpeditionInfo() *ActivityNullDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_ExpeditionInfo); ok {
		return x.ExpeditionInfo
	}
	return nil
}

func (x *ActivityInfo) GetArenaChallengeInfo() *ActivityNullDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_ArenaChallengeInfo); ok {
		return x.ArenaChallengeInfo
	}
	return nil
}

func (x *ActivityInfo) GetFleurFairInfo() *ActivityNullDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_FleurFairInfo); ok {
		return x.FleurFairInfo
	}
	return nil
}

func (x *ActivityInfo) GetWaterSpiritInfo() *ActivityNullDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_WaterSpiritInfo); ok {
		return x.WaterSpiritInfo
	}
	return nil
}

func (x *ActivityInfo) GetChallnelerSlabInfo() *ActivityNullDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_ChallnelerSlabInfo); ok {
		return x.ChallnelerSlabInfo
	}
	return nil
}

func (x *ActivityInfo) GetMistTrialActivityInfo() *ActivityNullDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_MistTrialActivityInfo); ok {
		return x.MistTrialActivityInfo
	}
	return nil
}

func (x *ActivityInfo) GetHideAndSeekInfo() *ActivityNullDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_HideAndSeekInfo); ok {
		return x.HideAndSeekInfo
	}
	return nil
}

func (x *ActivityInfo) GetFindHilichurlInfo() *ActivityNullDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_FindHilichurlInfo); ok {
		return x.FindHilichurlInfo
	}
	return nil
}

func (x *ActivityInfo) GetSummerTimeInfo() *ActivityNullDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_SummerTimeInfo); ok {
		return x.SummerTimeInfo
	}
	return nil
}

func (x *ActivityInfo) GetBuoyantCombatInfo() *ActivityNullDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_BuoyantCombatInfo); ok {
		return x.BuoyantCombatInfo
	}
	return nil
}

func (x *ActivityInfo) GetEchoShellInfo() *ActivityNullDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_EchoShellInfo); ok {
		return x.EchoShellInfo
	}
	return nil
}

func (x *ActivityInfo) GetBounceConjuringInfo() *ActivityNullDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_BounceConjuringInfo); ok {
		return x.BounceConjuringInfo
	}
	return nil
}

func (x *ActivityInfo) GetBlitzRushInfo() *ActivityNullDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_BlitzRushInfo); ok {
		return x.BlitzRushInfo
	}
	return nil
}

func (x *ActivityInfo) GetChessInfo() *ActivityNullDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_ChessInfo); ok {
		return x.ChessInfo
	}
	return nil
}

func (x *ActivityInfo) GetSumoInfo() *ActivityNullDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_SumoInfo); ok {
		return x.SumoInfo
	}
	return nil
}

func (x *ActivityInfo) GetMoonfinTrialInfo() *ActivityNullDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_MoonfinTrialInfo); ok {
		return x.MoonfinTrialInfo
	}
	return nil
}

func (x *ActivityInfo) GetLunaRiteInfo() *ActivityNullDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_LunaRiteInfo); ok {
		return x.LunaRiteInfo
	}
	return nil
}

func (x *ActivityInfo) GetPlantFlowerInfo() *ActivityNullDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_PlantFlowerInfo); ok {
		return x.PlantFlowerInfo
	}
	return nil
}

func (x *ActivityInfo) GetMusicGameInfo() *MusicGameActivityDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_MusicGameInfo); ok {
		return x.MusicGameInfo
	}
	return nil
}

func (x *ActivityInfo) GetRoguelikeDungoenInfo() *ActivityNullDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_RoguelikeDungoenInfo); ok {
		return x.RoguelikeDungoenInfo
	}
	return nil
}

func (x *ActivityInfo) GetDigInfo() *ActivityNullDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_DigInfo); ok {
		return x.DigInfo
	}
	return nil
}

func (x *ActivityInfo) GetActivityId() uint32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *ActivityInfo) GetScheduleId() uint32 {
	if x != nil {
		return x.ScheduleId
	}
	return 0
}

func (x *ActivityInfo) GetBeginTime() uint32 {
	if x != nil {
		return x.BeginTime
	}
	return 0
}

func (x *ActivityInfo) GetEndTime() uint32 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *ActivityInfo) GetActivityType() uint32 {
	if x != nil {
		return x.ActivityType
	}
	return 0
}

func (x *ActivityInfo) GetIsPlayOpenAnim() bool {
	if x != nil {
		return x.IsPlayOpenAnim
	}
	return false
}

func (x *ActivityInfo) GetIsFinished() bool {
	if x != nil {
		return x.IsFinished
	}
	return false
}

func (x *ActivityInfo) GetIsStarting() bool {
	if x != nil {
		return x.IsStarting
	}
	return false
}

func (x *ActivityInfo) GetWatcherInfoList() []*ActivityWatcherInfo {
	if x != nil {
		return x.WatcherInfoList
	}
	return nil
}

func (x *ActivityInfo) GetMeetCondList() []uint32 {
	if x != nil {
		return x.MeetCondList
	}
	return nil
}

func (x *ActivityInfo) GetExpireCondList() []uint32 {
	if x != nil {
		return x.ExpireCondList
	}
	return nil
}

func (x *ActivityInfo) GetSelectedAvatarRewardId() uint32 {
	if x != nil {
		return x.SelectedAvatarRewardId
	}
	return 0
}

func (x *ActivityInfo) GetActivityCoinMap() map[uint32]uint32 {
	if x != nil {
		return x.ActivityCoinMap
	}
	return nil
}

func (x *ActivityInfo) GetScoreLimit() uint32 {
	if x != nil {
		return x.ScoreLimit
	}
	return 0
}

func (x *ActivityInfo) GetCurScore() uint32 {
	if x != nil {
		return x.CurScore
	}
	return 0
}

func (x *ActivityInfo) GetTakenRewardList() []uint32 {
	if x != nil {
		return x.TakenRewardList
	}
	return nil
}

func (x *ActivityInfo) GetIsHidden() bool {
	if x != nil {
		return x.IsHidden
	}
	return false
}

func (x *ActivityInfo) GetFirstDayStartTime() uint32 {
	if x != nil {
		return x.FirstDayStartTime
	}
	return 0
}

type isActivityInfo_Detail interface {
	isActivityInfo_Detail()
}

type ActivityInfo_SamLampInfo struct {
	SamLampInfo *ActivityNullDetailInfo `protobuf:"bytes,6,opt,name=sam_lamp_info,json=samLampInfo,proto3,oneof"`
}

type ActivityInfo_CrucibleInfo struct {
	CrucibleInfo *ActivityNullDetailInfo `protobuf:"bytes,5,opt,name=crucible_info,json=crucibleInfo,proto3,oneof"`
}

type ActivityInfo_SalesmanInfo struct {
	SalesmanInfo *ActivityNullDetailInfo `protobuf:"bytes,3,opt,name=salesman_info,json=salesmanInfo,proto3,oneof"`
}

type ActivityInfo_TrialAvatarInfo struct {
	TrialAvatarInfo *ActivityNullDetailInfo `protobuf:"bytes,2,opt,name=trial_avatar_info,json=trialAvatarInfo,proto3,oneof"`
}

type ActivityInfo_DeliveryInfo struct {
	DeliveryInfo *ActivityNullDetailInfo `protobuf:"bytes,1673,opt,name=delivery_info,json=deliveryInfo,proto3,oneof"`
}

type ActivityInfo_AsterInfo struct {
	AsterInfo *ActivityNullDetailInfo `protobuf:"bytes,21,opt,name=aster_info,json=asterInfo,proto3,oneof"`
}

type ActivityInfo_FlightInfo struct {
	FlightInfo *ActivityNullDetailInfo `protobuf:"bytes,25,opt,name=flight_info,json=flightInfo,proto3,oneof"`
}

type ActivityInfo_DragonSpineInfo struct {
	DragonSpineInfo *ActivityNullDetailInfo `protobuf:"bytes,31,opt,name=dragon_spine_info,json=dragonSpineInfo,proto3,oneof"`
}

type ActivityInfo_EffigyInfo struct {
	EffigyInfo *ActivityNullDetailInfo `protobuf:"bytes,32,opt,name=effigy_info,json=effigyInfo,proto3,oneof"`
}

type ActivityInfo_TreasureMapInfo struct {
	TreasureMapInfo *ActivityNullDetailInfo `protobuf:"bytes,35,opt,name=treasure_map_info,json=treasureMapInfo,proto3,oneof"`
}

type ActivityInfo_BlessingInfo struct {
	BlessingInfo *ActivityNullDetailInfo `protobuf:"bytes,41,opt,name=blessing_info,json=blessingInfo,proto3,oneof"`
}

type ActivityInfo_SeaLampInfo struct {
	SeaLampInfo *ActivityNullDetailInfo `protobuf:"bytes,42,opt,name=sea_lamp_info,json=seaLampInfo,proto3,oneof"`
}

type ActivityInfo_ExpeditionInfo struct {
	ExpeditionInfo *ActivityNullDetailInfo `protobuf:"bytes,43,opt,name=expedition_info,json=expeditionInfo,proto3,oneof"`
}

type ActivityInfo_ArenaChallengeInfo struct {
	ArenaChallengeInfo *ActivityNullDetailInfo `protobuf:"bytes,44,opt,name=arena_challenge_info,json=arenaChallengeInfo,proto3,oneof"`
}

type ActivityInfo_FleurFairInfo struct {
	FleurFairInfo *ActivityNullDetailInfo `protobuf:"bytes,51,opt,name=fleur_fair_info,json=fleurFairInfo,proto3,oneof"`
}

type ActivityInfo_WaterSpiritInfo struct {
	WaterSpiritInfo *ActivityNullDetailInfo `protobuf:"bytes,52,opt,name=water_spirit_info,json=waterSpiritInfo,proto3,oneof"`
}

type ActivityInfo_ChallnelerSlabInfo struct {
	ChallnelerSlabInfo *ActivityNullDetailInfo `protobuf:"bytes,61,opt,name=challneler_slab_info,json=challnelerSlabInfo,proto3,oneof"`
}

type ActivityInfo_MistTrialActivityInfo struct {
	MistTrialActivityInfo *ActivityNullDetailInfo `protobuf:"bytes,62,opt,name=mist_trial_activity_info,json=mistTrialActivityInfo,proto3,oneof"`
}

type ActivityInfo_HideAndSeekInfo struct {
	HideAndSeekInfo *ActivityNullDetailInfo `protobuf:"bytes,63,opt,name=hide_and_seek_info,json=hideAndSeekInfo,proto3,oneof"`
}

type ActivityInfo_FindHilichurlInfo struct {
	FindHilichurlInfo *ActivityNullDetailInfo `protobuf:"bytes,64,opt,name=find_hilichurl_info,json=findHilichurlInfo,proto3,oneof"`
}

type ActivityInfo_SummerTimeInfo struct {
	SummerTimeInfo *ActivityNullDetailInfo `protobuf:"bytes,65,opt,name=summer_time_info,json=summerTimeInfo,proto3,oneof"`
}

type ActivityInfo_BuoyantCombatInfo struct {
	BuoyantCombatInfo *ActivityNullDetailInfo `protobuf:"bytes,66,opt,name=buoyant_combat_info,json=buoyantCombatInfo,proto3,oneof"`
}

type ActivityInfo_EchoShellInfo struct {
	EchoShellInfo *ActivityNullDetailInfo `protobuf:"bytes,67,opt,name=echo_shell_info,json=echoShellInfo,proto3,oneof"`
}

type ActivityInfo_BounceConjuringInfo struct {
	BounceConjuringInfo *ActivityNullDetailInfo `protobuf:"bytes,68,opt,name=bounce_conjuring_info,json=bounceConjuringInfo,proto3,oneof"`
}

type ActivityInfo_BlitzRushInfo struct {
	BlitzRushInfo *ActivityNullDetailInfo `protobuf:"bytes,69,opt,name=blitz_rush_info,json=blitzRushInfo,proto3,oneof"`
}

type ActivityInfo_ChessInfo struct {
	ChessInfo *ActivityNullDetailInfo `protobuf:"bytes,70,opt,name=chess_info,json=chessInfo,proto3,oneof"`
}

type ActivityInfo_SumoInfo struct {
	SumoInfo *ActivityNullDetailInfo `protobuf:"bytes,71,opt,name=sumo_info,json=sumoInfo,proto3,oneof"`
}

type ActivityInfo_MoonfinTrialInfo struct {
	MoonfinTrialInfo *ActivityNullDetailInfo `protobuf:"bytes,72,opt,name=moonfin_trial_info,json=moonfinTrialInfo,proto3,oneof"`
}

type ActivityInfo_LunaRiteInfo struct {
	LunaRiteInfo *ActivityNullDetailInfo `protobuf:"bytes,73,opt,name=luna_rite_info,json=lunaRiteInfo,proto3,oneof"`
}

type ActivityInfo_PlantFlowerInfo struct {
	PlantFlowerInfo *ActivityNullDetailInfo `protobuf:"bytes,74,opt,name=plant_flower_info,json=plantFlowerInfo,proto3,oneof"`
}

type ActivityInfo_MusicGameInfo struct {
	MusicGameInfo *MusicGameActivityDetailInfo `protobuf:"bytes,1612,opt,name=music_game_info,json=musicGameInfo,proto3,oneof"`
}

type ActivityInfo_RoguelikeDungoenInfo struct {
	RoguelikeDungoenInfo *ActivityNullDetailInfo `protobuf:"bytes,76,opt,name=roguelike_dungoen_info,json=roguelikeDungoenInfo,proto3,oneof"`
}

type ActivityInfo_DigInfo struct {
	DigInfo *ActivityNullDetailInfo `protobuf:"bytes,77,opt,name=dig_info,json=digInfo,proto3,oneof"`
}

func (*ActivityInfo_SamLampInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_CrucibleInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_SalesmanInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_TrialAvatarInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_DeliveryInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_AsterInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_FlightInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_DragonSpineInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_EffigyInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_TreasureMapInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_BlessingInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_SeaLampInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_ExpeditionInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_ArenaChallengeInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_FleurFairInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_WaterSpiritInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_ChallnelerSlabInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_MistTrialActivityInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_HideAndSeekInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_FindHilichurlInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_SummerTimeInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_BuoyantCombatInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_EchoShellInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_BounceConjuringInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_BlitzRushInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_ChessInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_SumoInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_MoonfinTrialInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_LunaRiteInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_PlantFlowerInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_MusicGameInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_RoguelikeDungoenInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_DigInfo) isActivityInfo_Detail() {}

var File_ActivityInfo_proto protoreflect.FileDescriptor

var file_ActivityInfo_proto_rawDesc = []byte{
	0x0a, 0x12, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x4e, 0x75, 0x6c, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49,
	0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x57, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x47, 0x61, 0x6d, 0x65, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe4, 0x19, 0x0a, 0x0c, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x43, 0x0a, 0x0d, 0x73, 0x61, 0x6d, 0x5f,
	0x6c, 0x61, 0x6d, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x4e, 0x75, 0x6c, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00,
	0x52, 0x0b, 0x73, 0x61, 0x6d, 0x4c, 0x61, 0x6d, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x44, 0x0a,
	0x0d, 0x63, 0x72, 0x75, 0x63, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x4e, 0x75, 0x6c, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49,
	0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x72, 0x75, 0x63, 0x69, 0x62, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x44, 0x0a, 0x0d, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x6d, 0x61, 0x6e, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4e, 0x75, 0x6c, 0x6c, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x61, 0x6c,
	0x65, 0x73, 0x6d, 0x61, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4b, 0x0a, 0x11, 0x74, 0x72, 0x69,
	0x61, 0x6c, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x4e, 0x75, 0x6c, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49,
	0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0f, 0x74, 0x72, 0x69, 0x61, 0x6c, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x45, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x89, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4e,
	0x75, 0x6c, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52,
	0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3e, 0x0a,
	0x0a, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x4e, 0x75, 0x6c, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x48, 0x00, 0x52, 0x09, 0x61, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x40, 0x0a,
	0x0b, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x19, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x4e, 0x75, 0x6c, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x4b, 0x0a, 0x11, 0x64, 0x72, 0x61, 0x67, 0x6f, 0x6e, 0x5f, 0x73, 0x70, 0x69, 0x6e, 0x65, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4e, 0x75, 0x6c, 0x6c, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0f, 0x64, 0x72, 0x61,
	0x67, 0x6f, 0x6e, 0x53, 0x70, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x40, 0x0a, 0x0b,
	0x65, 0x66, 0x66, 0x69, 0x67, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x20, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x4e, 0x75, 0x6c, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x48, 0x00, 0x52, 0x0a, 0x65, 0x66, 0x66, 0x69, 0x67, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4b,
	0x0a, 0x11, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4e, 0x75, 0x6c, 0x6c, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0f, 0x74, 0x72, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x65, 0x4d, 0x61, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x44, 0x0a, 0x0d, 0x62,
	0x6c, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x29, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x4e, 0x75, 0x6c, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x48, 0x00, 0x52, 0x0c, 0x62, 0x6c, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x43, 0x0a, 0x0d, 0x73, 0x65, 0x61, 0x5f, 0x6c, 0x61, 0x6d, 0x70, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4e, 0x75, 0x6c, 0x6c, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x65, 0x61, 0x4c, 0x61,
	0x6d, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x48, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x65, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x4e, 0x75, 0x6c, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00,
	0x52, 0x0e, 0x65, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x51, 0x0a, 0x14, 0x61, 0x72, 0x65, 0x6e, 0x61, 0x5f, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65,
	0x6e, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4e,
	0x75, 0x6c, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52,
	0x12, 0x61, 0x72, 0x65, 0x6e, 0x61, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x47, 0x0a, 0x0f, 0x66, 0x6c, 0x65, 0x75, 0x72, 0x5f, 0x66, 0x61, 0x69,
	0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x33, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4e, 0x75, 0x6c,
	0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0d, 0x66,
	0x6c, 0x65, 0x75, 0x72, 0x46, 0x61, 0x69, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4b, 0x0a, 0x11,
	0x77, 0x61, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x34, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4e, 0x75, 0x6c, 0x6c, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x53,
	0x70, 0x69, 0x72, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x51, 0x0a, 0x14, 0x63, 0x68, 0x61,
	0x6c, 0x6c, 0x6e, 0x65, 0x6c, 0x65, 0x72, 0x5f, 0x73, 0x6c, 0x61, 0x62, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4e, 0x75, 0x6c, 0x6c, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x12, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x6e,
	0x65, 0x6c, 0x65, 0x72, 0x53, 0x6c, 0x61, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x58, 0x0a, 0x18,
	0x6d, 0x69, 0x73, 0x74, 0x5f, 0x74, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x3e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4e,
	0x75, 0x6c, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52,
	0x15, 0x6d, 0x69, 0x73, 0x74, 0x54, 0x72, 0x69, 0x61, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4c, 0x0a, 0x12, 0x68, 0x69, 0x64, 0x65, 0x5f, 0x61,
	0x6e, 0x64, 0x5f, 0x73, 0x65, 0x65, 0x6b, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x3f, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x4e, 0x75, 0x6c, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x48, 0x00, 0x52, 0x0f, 0x68, 0x69, 0x64, 0x65, 0x41, 0x6e, 0x64, 0x53, 0x65, 0x65, 0x6b,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4f, 0x0a, 0x13, 0x66, 0x69, 0x6e, 0x64, 0x5f, 0x68, 0x69, 0x6c,
	0x69, 0x63, 0x68, 0x75, 0x72, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x40, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x4e, 0x75, 0x6c, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x48, 0x00, 0x52, 0x11, 0x66, 0x69, 0x6e, 0x64, 0x48, 0x69, 0x6c, 0x69, 0x63, 0x68, 0x75, 0x72,
	0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x49, 0x0a, 0x10, 0x73, 0x75, 0x6d, 0x6d, 0x65, 0x72, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x41, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x4e, 0x75, 0x6c, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00,
	0x52, 0x0e, 0x73, 0x75, 0x6d, 0x6d, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x4f, 0x0a, 0x13, 0x62, 0x75, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x62,
	0x61, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x42, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4e, 0x75,
	0x6c, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x11,
	0x62, 0x75, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x47, 0x0a, 0x0f, 0x65, 0x63, 0x68, 0x6f, 0x5f, 0x73, 0x68, 0x65, 0x6c, 0x6c, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x43, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4e, 0x75, 0x6c, 0x6c, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0d, 0x65, 0x63, 0x68,
	0x6f, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x53, 0x0a, 0x15, 0x62, 0x6f,
	0x75, 0x6e, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x6a, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x44, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4e, 0x75, 0x6c, 0x6c, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x13, 0x62, 0x6f, 0x75, 0x6e,
	0x63, 0x65, 0x43, 0x6f, 0x6e, 0x6a, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x47, 0x0a, 0x0f, 0x62, 0x6c, 0x69, 0x74, 0x7a, 0x5f, 0x72, 0x75, 0x73, 0x68, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x45, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4e, 0x75, 0x6c, 0x6c, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0d, 0x62, 0x6c, 0x69, 0x74, 0x7a,
	0x52, 0x75, 0x73, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3e, 0x0a, 0x0a, 0x63, 0x68, 0x65, 0x73,
	0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x46, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4e, 0x75, 0x6c,
	0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x09, 0x63,
	0x68, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3c, 0x0a, 0x09, 0x73, 0x75, 0x6d, 0x6f,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x47, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4e, 0x75, 0x6c, 0x6c,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x08, 0x73, 0x75,
	0x6d, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4d, 0x0a, 0x12, 0x6d, 0x6f, 0x6f, 0x6e, 0x66, 0x69,
	0x6e, 0x5f, 0x74, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x48, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x4e, 0x75, 0x6c, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x48, 0x00, 0x52, 0x10, 0x6d, 0x6f, 0x6f, 0x6e, 0x66, 0x69, 0x6e, 0x54, 0x72, 0x69, 0x61,
	0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x45, 0x0a, 0x0e, 0x6c, 0x75, 0x6e, 0x61, 0x5f, 0x72, 0x69,
	0x74, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x49, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4e, 0x75,
	0x6c, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0c,
	0x6c, 0x75, 0x6e, 0x61, 0x52, 0x69, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4b, 0x0a, 0x11,
	0x70, 0x6c, 0x61, 0x6e, 0x74, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x4a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4e, 0x75, 0x6c, 0x6c, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0f, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x46,
	0x6c, 0x6f, 0x77, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4d, 0x0a, 0x0f, 0x6d, 0x75, 0x73,
	0x69, 0x63, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xcc, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x75, 0x73, 0x69,
	0x63, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0d, 0x6d, 0x75, 0x73, 0x69, 0x63,
	0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x55, 0x0a, 0x16, 0x72, 0x6f, 0x67, 0x75,
	0x65, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x64, 0x75, 0x6e, 0x67, 0x6f, 0x65, 0x6e, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x4c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4e, 0x75, 0x6c, 0x6c, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x14, 0x72, 0x6f, 0x67, 0x75, 0x65,
	0x6c, 0x69, 0x6b, 0x65, 0x44, 0x75, 0x6e, 0x67, 0x6f, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x3a, 0x0a, 0x08, 0x64, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x4d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x4e, 0x75, 0x6c, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x48, 0x00, 0x52, 0x07, 0x64, 0x69, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a, 0x11,
	0x69, 0x73, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x61, 0x6e, 0x69,
	0x6d, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x4f,
	0x70, 0x65, 0x6e, 0x41, 0x6e, 0x69, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x66, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73,
	0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69,
	0x73, 0x53, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x46, 0x0a, 0x11, 0x77, 0x61, 0x74,
	0x63, 0x68, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x57, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0f, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x65, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0c, 0x6d, 0x65, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x3a, 0x0a, 0x19, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0xf2,
	0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x16, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x55, 0x0a,
	0x11, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x6d,
	0x61, 0x70, 0x18, 0xf0, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x69, 0x6e, 0x4d, 0x61, 0x70, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x69,
	0x6e, 0x4d, 0x61, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0xa3, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x75, 0x72, 0x5f, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x18, 0x8f, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x75, 0x72, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x74, 0x61, 0x6b, 0x65, 0x6e, 0x5f, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0xee, 0x09, 0x20, 0x03, 0x28, 0x0d,
	0x52, 0x0f, 0x74, 0x61, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x18, 0x6e,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x12, 0x30,
	0x0a, 0x14, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x64, 0x61, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x90, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x44, 0x61, 0x79, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x1a, 0x42, 0x0a, 0x14, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x69, 0x6e,
	0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x0a,
	0x5a, 0x08, 0x2e, 0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_ActivityInfo_proto_rawDescOnce sync.Once
	file_ActivityInfo_proto_rawDescData = file_ActivityInfo_proto_rawDesc
)

func file_ActivityInfo_proto_rawDescGZIP() []byte {
	file_ActivityInfo_proto_rawDescOnce.Do(func() {
		file_ActivityInfo_proto_rawDescData = protoimpl.X.CompressGZIP(file_ActivityInfo_proto_rawDescData)
	})
	return file_ActivityInfo_proto_rawDescData
}

var file_ActivityInfo_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_ActivityInfo_proto_goTypes = []interface{}{
	(*ActivityInfo)(nil),                // 0: proto.ActivityInfo
	nil,                                 // 1: proto.ActivityInfo.ActivityCoinMapEntry
	(*ActivityNullDetailInfo)(nil),      // 2: proto.ActivityNullDetailInfo
	(*MusicGameActivityDetailInfo)(nil), // 3: proto.MusicGameActivityDetailInfo
	(*ActivityWatcherInfo)(nil),         // 4: proto.ActivityWatcherInfo
}
var file_ActivityInfo_proto_depIdxs = []int32{
	2,  // 0: proto.ActivityInfo.sam_lamp_info:type_name -> proto.ActivityNullDetailInfo
	2,  // 1: proto.ActivityInfo.crucible_info:type_name -> proto.ActivityNullDetailInfo
	2,  // 2: proto.ActivityInfo.salesman_info:type_name -> proto.ActivityNullDetailInfo
	2,  // 3: proto.ActivityInfo.trial_avatar_info:type_name -> proto.ActivityNullDetailInfo
	2,  // 4: proto.ActivityInfo.delivery_info:type_name -> proto.ActivityNullDetailInfo
	2,  // 5: proto.ActivityInfo.aster_info:type_name -> proto.ActivityNullDetailInfo
	2,  // 6: proto.ActivityInfo.flight_info:type_name -> proto.ActivityNullDetailInfo
	2,  // 7: proto.ActivityInfo.dragon_spine_info:type_name -> proto.ActivityNullDetailInfo
	2,  // 8: proto.ActivityInfo.effigy_info:type_name -> proto.ActivityNullDetailInfo
	2,  // 9: proto.ActivityInfo.treasure_map_info:type_name -> proto.ActivityNullDetailInfo
	2,  // 10: proto.ActivityInfo.blessing_info:type_name -> proto.ActivityNullDetailInfo
	2,  // 11: proto.ActivityInfo.sea_lamp_info:type_name -> proto.ActivityNullDetailInfo
	2,  // 12: proto.ActivityInfo.expedition_info:type_name -> proto.ActivityNullDetailInfo
	2,  // 13: proto.ActivityInfo.arena_challenge_info:type_name -> proto.ActivityNullDetailInfo
	2,  // 14: proto.ActivityInfo.fleur_fair_info:type_name -> proto.ActivityNullDetailInfo
	2,  // 15: proto.ActivityInfo.water_spirit_info:type_name -> proto.ActivityNullDetailInfo
	2,  // 16: proto.ActivityInfo.challneler_slab_info:type_name -> proto.ActivityNullDetailInfo
	2,  // 17: proto.ActivityInfo.mist_trial_activity_info:type_name -> proto.ActivityNullDetailInfo
	2,  // 18: proto.ActivityInfo.hide_and_seek_info:type_name -> proto.ActivityNullDetailInfo
	2,  // 19: proto.ActivityInfo.find_hilichurl_info:type_name -> proto.ActivityNullDetailInfo
	2,  // 20: proto.ActivityInfo.summer_time_info:type_name -> proto.ActivityNullDetailInfo
	2,  // 21: proto.ActivityInfo.buoyant_combat_info:type_name -> proto.ActivityNullDetailInfo
	2,  // 22: proto.ActivityInfo.echo_shell_info:type_name -> proto.ActivityNullDetailInfo
	2,  // 23: proto.ActivityInfo.bounce_conjuring_info:type_name -> proto.ActivityNullDetailInfo
	2,  // 24: proto.ActivityInfo.blitz_rush_info:type_name -> proto.ActivityNullDetailInfo
	2,  // 25: proto.ActivityInfo.chess_info:type_name -> proto.ActivityNullDetailInfo
	2,  // 26: proto.ActivityInfo.sumo_info:type_name -> proto.ActivityNullDetailInfo
	2,  // 27: proto.ActivityInfo.moonfin_trial_info:type_name -> proto.ActivityNullDetailInfo
	2,  // 28: proto.ActivityInfo.luna_rite_info:type_name -> proto.ActivityNullDetailInfo
	2,  // 29: proto.ActivityInfo.plant_flower_info:type_name -> proto.ActivityNullDetailInfo
	3,  // 30: proto.ActivityInfo.music_game_info:type_name -> proto.MusicGameActivityDetailInfo
	2,  // 31: proto.ActivityInfo.roguelike_dungoen_info:type_name -> proto.ActivityNullDetailInfo
	2,  // 32: proto.ActivityInfo.dig_info:type_name -> proto.ActivityNullDetailInfo
	4,  // 33: proto.ActivityInfo.watcher_info_list:type_name -> proto.ActivityWatcherInfo
	1,  // 34: proto.ActivityInfo.activity_coin_map:type_name -> proto.ActivityInfo.ActivityCoinMapEntry
	35, // [35:35] is the sub-list for method output_type
	35, // [35:35] is the sub-list for method input_type
	35, // [35:35] is the sub-list for extension type_name
	35, // [35:35] is the sub-list for extension extendee
	0,  // [0:35] is the sub-list for field type_name
}

func init() { file_ActivityInfo_proto_init() }
func file_ActivityInfo_proto_init() {
	if File_ActivityInfo_proto != nil {
		return
	}
	file_ActivityNullDetailInfo_proto_init()
	file_ActivityWatcherInfo_proto_init()
	file_MusicGameActivityDetailInfo_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_ActivityInfo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_ActivityInfo_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*ActivityInfo_SamLampInfo)(nil),
		(*ActivityInfo_CrucibleInfo)(nil),
		(*ActivityInfo_SalesmanInfo)(nil),
		(*ActivityInfo_TrialAvatarInfo)(nil),
		(*ActivityInfo_DeliveryInfo)(nil),
		(*ActivityInfo_AsterInfo)(nil),
		(*ActivityInfo_FlightInfo)(nil),
		(*ActivityInfo_DragonSpineInfo)(nil),
		(*ActivityInfo_EffigyInfo)(nil),
		(*ActivityInfo_TreasureMapInfo)(nil),
		(*ActivityInfo_BlessingInfo)(nil),
		(*ActivityInfo_SeaLampInfo)(nil),
		(*ActivityInfo_ExpeditionInfo)(nil),
		(*ActivityInfo_ArenaChallengeInfo)(nil),
		(*ActivityInfo_FleurFairInfo)(nil),
		(*ActivityInfo_WaterSpiritInfo)(nil),
		(*ActivityInfo_ChallnelerSlabInfo)(nil),
		(*ActivityInfo_MistTrialActivityInfo)(nil),
		(*ActivityInfo_HideAndSeekInfo)(nil),
		(*ActivityInfo_FindHilichurlInfo)(nil),
		(*ActivityInfo_SummerTimeInfo)(nil),
		(*ActivityInfo_BuoyantCombatInfo)(nil),
		(*ActivityInfo_EchoShellInfo)(nil),
		(*ActivityInfo_BounceConjuringInfo)(nil),
		(*ActivityInfo_BlitzRushInfo)(nil),
		(*ActivityInfo_ChessInfo)(nil),
		(*ActivityInfo_SumoInfo)(nil),
		(*ActivityInfo_MoonfinTrialInfo)(nil),
		(*ActivityInfo_LunaRiteInfo)(nil),
		(*ActivityInfo_PlantFlowerInfo)(nil),
		(*ActivityInfo_MusicGameInfo)(nil),
		(*ActivityInfo_RoguelikeDungoenInfo)(nil),
		(*ActivityInfo_DigInfo)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ActivityInfo_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ActivityInfo_proto_goTypes,
		DependencyIndexes: file_ActivityInfo_proto_depIdxs,
		MessageInfos:      file_ActivityInfo_proto_msgTypes,
	}.Build()
	File_ActivityInfo_proto = out.File
	file_ActivityInfo_proto_rawDesc = nil
	file_ActivityInfo_proto_goTypes = nil
	file_ActivityInfo_proto_depIdxs = nil
}
