// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.7.0
// source: ParentQuest.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ParentQuest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParentQuestId    uint32                 `protobuf:"varint,1,opt,name=parent_quest_id,json=parentQuestId,proto3" json:"parent_quest_id,omitempty"`
	ChildQuestList   []*ChildQuest          `protobuf:"bytes,2,rep,name=child_quest_list,json=childQuestList,proto3" json:"child_quest_list,omitempty"`
	IsFinished       bool                   `protobuf:"varint,3,opt,name=is_finished,json=isFinished,proto3" json:"is_finished,omitempty"`
	IsRandom         bool                   `protobuf:"varint,4,opt,name=is_random,json=isRandom,proto3" json:"is_random,omitempty"`
	RandomInfo       *ParentQuestRandomInfo `protobuf:"bytes,5,opt,name=random_info,json=randomInfo,proto3" json:"random_info,omitempty"`
	QuestVar         []int32                `protobuf:"varint,6,rep,packed,name=quest_var,json=questVar,proto3" json:"quest_var,omitempty"`
	ParentQuestState uint32                 `protobuf:"varint,7,opt,name=parent_quest_state,json=parentQuestState,proto3" json:"parent_quest_state,omitempty"`
	QuestVarSeq      uint32                 `protobuf:"varint,8,opt,name=quest_var_seq,json=questVarSeq,proto3" json:"quest_var_seq,omitempty"`
	TimeVarMap       map[uint32]uint32      `protobuf:"bytes,9,rep,name=time_var_map,json=timeVarMap,proto3" json:"time_var_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *ParentQuest) Reset() {
	*x = ParentQuest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ParentQuest_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParentQuest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParentQuest) ProtoMessage() {}

func (x *ParentQuest) ProtoReflect() protoreflect.Message {
	mi := &file_ParentQuest_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParentQuest.ProtoReflect.Descriptor instead.
func (*ParentQuest) Descriptor() ([]byte, []int) {
	return file_ParentQuest_proto_rawDescGZIP(), []int{0}
}

func (x *ParentQuest) GetParentQuestId() uint32 {
	if x != nil {
		return x.ParentQuestId
	}
	return 0
}

func (x *ParentQuest) GetChildQuestList() []*ChildQuest {
	if x != nil {
		return x.ChildQuestList
	}
	return nil
}

func (x *ParentQuest) GetIsFinished() bool {
	if x != nil {
		return x.IsFinished
	}
	return false
}

func (x *ParentQuest) GetIsRandom() bool {
	if x != nil {
		return x.IsRandom
	}
	return false
}

func (x *ParentQuest) GetRandomInfo() *ParentQuestRandomInfo {
	if x != nil {
		return x.RandomInfo
	}
	return nil
}

func (x *ParentQuest) GetQuestVar() []int32 {
	if x != nil {
		return x.QuestVar
	}
	return nil
}

func (x *ParentQuest) GetParentQuestState() uint32 {
	if x != nil {
		return x.ParentQuestState
	}
	return 0
}

func (x *ParentQuest) GetQuestVarSeq() uint32 {
	if x != nil {
		return x.QuestVarSeq
	}
	return 0
}

func (x *ParentQuest) GetTimeVarMap() map[uint32]uint32 {
	if x != nil {
		return x.TimeVarMap
	}
	return nil
}

var File_ParentQuest_proto protoreflect.FileDescriptor

var file_ParentQuest_proto_rawDesc = []byte{
	0x0a, 0x11, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x50, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x49, 0x6e, 0x66,
	0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x51, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe3, 0x03, 0x0a, 0x0b, 0x50, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x5f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x12, 0x3b, 0x0a, 0x10, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x5f, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x51, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0e,
	0x63, 0x68, 0x69, 0x6c, 0x64, 0x51, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x12, 0x3d, 0x0a, 0x0b,
	0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0a, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x76, 0x61, 0x72, 0x18, 0x06, 0x20, 0x03, 0x28, 0x05, 0x52, 0x08,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x61, 0x72, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x76, 0x61, 0x72, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x56, 0x61, 0x72, 0x53, 0x65, 0x71, 0x12, 0x44, 0x0a, 0x0c, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x76, 0x61, 0x72, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x51,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x56, 0x61, 0x72, 0x4d, 0x61, 0x70, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x56, 0x61, 0x72, 0x4d, 0x61, 0x70,
	0x1a, 0x3d, 0x0a, 0x0f, 0x54, 0x69, 0x6d, 0x65, 0x56, 0x61, 0x72, 0x4d, 0x61, 0x70, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42,
	0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_ParentQuest_proto_rawDescOnce sync.Once
	file_ParentQuest_proto_rawDescData = file_ParentQuest_proto_rawDesc
)

func file_ParentQuest_proto_rawDescGZIP() []byte {
	file_ParentQuest_proto_rawDescOnce.Do(func() {
		file_ParentQuest_proto_rawDescData = protoimpl.X.CompressGZIP(file_ParentQuest_proto_rawDescData)
	})
	return file_ParentQuest_proto_rawDescData
}

var file_ParentQuest_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_ParentQuest_proto_goTypes = []interface{}{
	(*ParentQuest)(nil),           // 0: proto.ParentQuest
	nil,                           // 1: proto.ParentQuest.TimeVarMapEntry
	(*ChildQuest)(nil),            // 2: proto.ChildQuest
	(*ParentQuestRandomInfo)(nil), // 3: proto.ParentQuestRandomInfo
}
var file_ParentQuest_proto_depIdxs = []int32{
	2, // 0: proto.ParentQuest.child_quest_list:type_name -> proto.ChildQuest
	3, // 1: proto.ParentQuest.random_info:type_name -> proto.ParentQuestRandomInfo
	1, // 2: proto.ParentQuest.time_var_map:type_name -> proto.ParentQuest.TimeVarMapEntry
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_ParentQuest_proto_init() }
func file_ParentQuest_proto_init() {
	if File_ParentQuest_proto != nil {
		return
	}
	file_ParentQuestRandomInfo_proto_init()
	file_ChildQuest_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_ParentQuest_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParentQuest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ParentQuest_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ParentQuest_proto_goTypes,
		DependencyIndexes: file_ParentQuest_proto_depIdxs,
		MessageInfos:      file_ParentQuest_proto_msgTypes,
	}.Build()
	File_ParentQuest_proto = out.File
	file_ParentQuest_proto_rawDesc = nil
	file_ParentQuest_proto_goTypes = nil
	file_ParentQuest_proto_depIdxs = nil
}
