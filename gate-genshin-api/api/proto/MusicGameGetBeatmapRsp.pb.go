// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.7.0
// source: MusicGameGetBeatmapRsp.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CmdId: 6309
// EnetChannelId: 0
// EnetIsReliable: true
type MusicGameGetBeatmapRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode      int32                      `protobuf:"varint,13,opt,name=retcode,proto3" json:"retcode,omitempty"`
	UnknownEnum1 MusicGameUnknown1Enum      `protobuf:"varint,1,opt,name=unknown_enum1,json=unknownEnum1,proto3,enum=proto.MusicGameUnknown1Enum" json:"unknown_enum1,omitempty"`
	MusicShareId uint64                     `protobuf:"varint,5,opt,name=music_share_id,json=musicShareId,proto3" json:"music_share_id,omitempty"`
	ReqType      MusicGameGetBeatmapReqType `protobuf:"varint,2,opt,name=req_type,json=reqType,proto3,enum=proto.MusicGameGetBeatmapReqType" json:"req_type,omitempty"`
	// Types that are assignable to Beatmap:
	//	*MusicGameGetBeatmapRsp_MusicRecord
	Beatmap isMusicGameGetBeatmapRsp_Beatmap `protobuf_oneof:"beatmap"`
	// Types that are assignable to BriefInfo:
	//	*MusicGameGetBeatmapRsp_MusicBriefInfo
	BriefInfo isMusicGameGetBeatmapRsp_BriefInfo `protobuf_oneof:"brief_info"`
}

func (x *MusicGameGetBeatmapRsp) Reset() {
	*x = MusicGameGetBeatmapRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MusicGameGetBeatmapRsp_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MusicGameGetBeatmapRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MusicGameGetBeatmapRsp) ProtoMessage() {}

func (x *MusicGameGetBeatmapRsp) ProtoReflect() protoreflect.Message {
	mi := &file_MusicGameGetBeatmapRsp_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MusicGameGetBeatmapRsp.ProtoReflect.Descriptor instead.
func (*MusicGameGetBeatmapRsp) Descriptor() ([]byte, []int) {
	return file_MusicGameGetBeatmapRsp_proto_rawDescGZIP(), []int{0}
}

func (x *MusicGameGetBeatmapRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *MusicGameGetBeatmapRsp) GetUnknownEnum1() MusicGameUnknown1Enum {
	if x != nil {
		return x.UnknownEnum1
	}
	return MusicGameUnknown1Enum_MusicGameUnknown1Enum_NONE
}

func (x *MusicGameGetBeatmapRsp) GetMusicShareId() uint64 {
	if x != nil {
		return x.MusicShareId
	}
	return 0
}

func (x *MusicGameGetBeatmapRsp) GetReqType() MusicGameGetBeatmapReqType {
	if x != nil {
		return x.ReqType
	}
	return MusicGameGetBeatmapReqType_MusicGameGetBeatmapReqType_u1
}

func (m *MusicGameGetBeatmapRsp) GetBeatmap() isMusicGameGetBeatmapRsp_Beatmap {
	if m != nil {
		return m.Beatmap
	}
	return nil
}

func (x *MusicGameGetBeatmapRsp) GetMusicRecord() *MusicBeatmap {
	if x, ok := x.GetBeatmap().(*MusicGameGetBeatmapRsp_MusicRecord); ok {
		return x.MusicRecord
	}
	return nil
}

func (m *MusicGameGetBeatmapRsp) GetBriefInfo() isMusicGameGetBeatmapRsp_BriefInfo {
	if m != nil {
		return m.BriefInfo
	}
	return nil
}

func (x *MusicGameGetBeatmapRsp) GetMusicBriefInfo() *MusicBriefInfo {
	if x, ok := x.GetBriefInfo().(*MusicGameGetBeatmapRsp_MusicBriefInfo); ok {
		return x.MusicBriefInfo
	}
	return nil
}

type isMusicGameGetBeatmapRsp_Beatmap interface {
	isMusicGameGetBeatmapRsp_Beatmap()
}

type MusicGameGetBeatmapRsp_MusicRecord struct {
	MusicRecord *MusicBeatmap `protobuf:"bytes,9,opt,name=music_record,json=musicRecord,proto3,oneof"`
}

func (*MusicGameGetBeatmapRsp_MusicRecord) isMusicGameGetBeatmapRsp_Beatmap() {}

type isMusicGameGetBeatmapRsp_BriefInfo interface {
	isMusicGameGetBeatmapRsp_BriefInfo()
}

type MusicGameGetBeatmapRsp_MusicBriefInfo struct {
	MusicBriefInfo *MusicBriefInfo `protobuf:"bytes,953,opt,name=music_brief_info,json=musicBriefInfo,proto3,oneof"`
}

func (*MusicGameGetBeatmapRsp_MusicBriefInfo) isMusicGameGetBeatmapRsp_BriefInfo() {}

var File_MusicGameGetBeatmapRsp_proto protoreflect.FileDescriptor

var file_MusicGameGetBeatmapRsp_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x47, 0x61, 0x6d, 0x65, 0x47, 0x65, 0x74, 0x42, 0x65,
	0x61, 0x74, 0x6d, 0x61, 0x70, 0x52, 0x73, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x47, 0x61, 0x6d, 0x65,
	0x47, 0x65, 0x74, 0x42, 0x65, 0x61, 0x74, 0x6d, 0x61, 0x70, 0x52, 0x65, 0x71, 0x54, 0x79, 0x70,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x42, 0x65,
	0x61, 0x74, 0x6d, 0x61, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x4d, 0x75, 0x73,
	0x69, 0x63, 0x42, 0x72, 0x69, 0x65, 0x66, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1b, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x47, 0x61, 0x6d, 0x65, 0x55, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x31, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf0,
	0x02, 0x0a, 0x16, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x47, 0x61, 0x6d, 0x65, 0x47, 0x65, 0x74, 0x42,
	0x65, 0x61, 0x74, 0x6d, 0x61, 0x70, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x41, 0x0a, 0x0d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x65,
	0x6e, 0x75, 0x6d, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x47, 0x61, 0x6d, 0x65, 0x55, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x31, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0c, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77,
	0x6e, 0x45, 0x6e, 0x75, 0x6d, 0x31, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c,
	0x6d, 0x75, 0x73, 0x69, 0x63, 0x53, 0x68, 0x61, 0x72, 0x65, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x08,
	0x72, 0x65, 0x71, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x47, 0x61, 0x6d, 0x65,
	0x47, 0x65, 0x74, 0x42, 0x65, 0x61, 0x74, 0x6d, 0x61, 0x70, 0x52, 0x65, 0x71, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x07, 0x72, 0x65, 0x71, 0x54, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x0c, 0x6d, 0x75,
	0x73, 0x69, 0x63, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x42, 0x65,
	0x61, 0x74, 0x6d, 0x61, 0x70, 0x48, 0x00, 0x52, 0x0b, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x12, 0x42, 0x0a, 0x10, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x62, 0x72,
	0x69, 0x65, 0x66, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xb9, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x42, 0x72, 0x69,
	0x65, 0x66, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x01, 0x52, 0x0e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x42,
	0x72, 0x69, 0x65, 0x66, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x09, 0x0a, 0x07, 0x62, 0x65, 0x61, 0x74,
	0x6d, 0x61, 0x70, 0x42, 0x0c, 0x0a, 0x0a, 0x62, 0x72, 0x69, 0x65, 0x66, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_MusicGameGetBeatmapRsp_proto_rawDescOnce sync.Once
	file_MusicGameGetBeatmapRsp_proto_rawDescData = file_MusicGameGetBeatmapRsp_proto_rawDesc
)

func file_MusicGameGetBeatmapRsp_proto_rawDescGZIP() []byte {
	file_MusicGameGetBeatmapRsp_proto_rawDescOnce.Do(func() {
		file_MusicGameGetBeatmapRsp_proto_rawDescData = protoimpl.X.CompressGZIP(file_MusicGameGetBeatmapRsp_proto_rawDescData)
	})
	return file_MusicGameGetBeatmapRsp_proto_rawDescData
}

var file_MusicGameGetBeatmapRsp_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_MusicGameGetBeatmapRsp_proto_goTypes = []interface{}{
	(*MusicGameGetBeatmapRsp)(nil),  // 0: proto.MusicGameGetBeatmapRsp
	(MusicGameUnknown1Enum)(0),      // 1: proto.MusicGameUnknown1Enum
	(MusicGameGetBeatmapReqType)(0), // 2: proto.MusicGameGetBeatmapReqType
	(*MusicBeatmap)(nil),            // 3: proto.MusicBeatmap
	(*MusicBriefInfo)(nil),          // 4: proto.MusicBriefInfo
}
var file_MusicGameGetBeatmapRsp_proto_depIdxs = []int32{
	1, // 0: proto.MusicGameGetBeatmapRsp.unknown_enum1:type_name -> proto.MusicGameUnknown1Enum
	2, // 1: proto.MusicGameGetBeatmapRsp.req_type:type_name -> proto.MusicGameGetBeatmapReqType
	3, // 2: proto.MusicGameGetBeatmapRsp.music_record:type_name -> proto.MusicBeatmap
	4, // 3: proto.MusicGameGetBeatmapRsp.music_brief_info:type_name -> proto.MusicBriefInfo
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_MusicGameGetBeatmapRsp_proto_init() }
func file_MusicGameGetBeatmapRsp_proto_init() {
	if File_MusicGameGetBeatmapRsp_proto != nil {
		return
	}
	file_MusicGameGetBeatmapReqType_proto_init()
	file_MusicBeatmap_proto_init()
	file_MusicBriefInfo_proto_init()
	file_MusicGameUnknown1Enum_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_MusicGameGetBeatmapRsp_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MusicGameGetBeatmapRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_MusicGameGetBeatmapRsp_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*MusicGameGetBeatmapRsp_MusicRecord)(nil),
		(*MusicGameGetBeatmapRsp_MusicBriefInfo)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_MusicGameGetBeatmapRsp_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_MusicGameGetBeatmapRsp_proto_goTypes,
		DependencyIndexes: file_MusicGameGetBeatmapRsp_proto_depIdxs,
		MessageInfos:      file_MusicGameGetBeatmapRsp_proto_msgTypes,
	}.Build()
	File_MusicGameGetBeatmapRsp_proto = out.File
	file_MusicGameGetBeatmapRsp_proto_rawDesc = nil
	file_MusicGameGetBeatmapRsp_proto_goTypes = nil
	file_MusicGameGetBeatmapRsp_proto_depIdxs = nil
}
