// Sorapointa - A server software re-implementation for a certain anime game, and avoid sorapointa.
// Copyright (C) 2022  Sorapointa Team
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.7.0
// source: FleurFairActivityDetailInfo.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FleurFairActivityDetailInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsContentClosed       bool                                    `protobuf:"varint,4,opt,name=is_content_closed,json=isContentClosed,proto3" json:"is_content_closed,omitempty"`
	DungeonPunishOverTime uint32                                  `protobuf:"varint,6,opt,name=dungeon_punish_over_time,json=dungeonPunishOverTime,proto3" json:"dungeon_punish_over_time,omitempty"`
	ContentCloseTime      uint32                                  `protobuf:"varint,15,opt,name=content_close_time,json=contentCloseTime,proto3" json:"content_close_time,omitempty"`
	ObtainedToken         uint32                                  `protobuf:"varint,13,opt,name=obtained_token,json=obtainedToken,proto3" json:"obtained_token,omitempty"`
	ChapterInfoList       []*FleurFairChapterInfo                 `protobuf:"bytes,14,rep,name=chapter_info_list,json=chapterInfoList,proto3" json:"chapter_info_list,omitempty"`
	MinigameInfoMap       map[uint32]*FleurFairMinigameInfo       `protobuf:"bytes,9,rep,name=minigame_info_map,json=minigameInfoMap,proto3" json:"minigame_info_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	DungeonSectionInfoMap map[uint32]*FleurFairDungeonSectionInfo `protobuf:"bytes,3,rep,name=dungeon_section_info_map,json=dungeonSectionInfoMap,proto3" json:"dungeon_section_info_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	IsDungeonUnlocked     bool                                    `protobuf:"varint,11,opt,name=is_dungeon_unlocked,json=isDungeonUnlocked,proto3" json:"is_dungeon_unlocked,omitempty"`
}

func (x *FleurFairActivityDetailInfo) Reset() {
	*x = FleurFairActivityDetailInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FleurFairActivityDetailInfo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FleurFairActivityDetailInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FleurFairActivityDetailInfo) ProtoMessage() {}

func (x *FleurFairActivityDetailInfo) ProtoReflect() protoreflect.Message {
	mi := &file_FleurFairActivityDetailInfo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FleurFairActivityDetailInfo.ProtoReflect.Descriptor instead.
func (*FleurFairActivityDetailInfo) Descriptor() ([]byte, []int) {
	return file_FleurFairActivityDetailInfo_proto_rawDescGZIP(), []int{0}
}

func (x *FleurFairActivityDetailInfo) GetIsContentClosed() bool {
	if x != nil {
		return x.IsContentClosed
	}
	return false
}

func (x *FleurFairActivityDetailInfo) GetDungeonPunishOverTime() uint32 {
	if x != nil {
		return x.DungeonPunishOverTime
	}
	return 0
}

func (x *FleurFairActivityDetailInfo) GetContentCloseTime() uint32 {
	if x != nil {
		return x.ContentCloseTime
	}
	return 0
}

func (x *FleurFairActivityDetailInfo) GetObtainedToken() uint32 {
	if x != nil {
		return x.ObtainedToken
	}
	return 0
}

func (x *FleurFairActivityDetailInfo) GetChapterInfoList() []*FleurFairChapterInfo {
	if x != nil {
		return x.ChapterInfoList
	}
	return nil
}

func (x *FleurFairActivityDetailInfo) GetMinigameInfoMap() map[uint32]*FleurFairMinigameInfo {
	if x != nil {
		return x.MinigameInfoMap
	}
	return nil
}

func (x *FleurFairActivityDetailInfo) GetDungeonSectionInfoMap() map[uint32]*FleurFairDungeonSectionInfo {
	if x != nil {
		return x.DungeonSectionInfoMap
	}
	return nil
}

func (x *FleurFairActivityDetailInfo) GetIsDungeonUnlocked() bool {
	if x != nil {
		return x.IsDungeonUnlocked
	}
	return false
}

var File_FleurFairActivityDetailInfo_proto protoreflect.FileDescriptor

var file_FleurFairActivityDetailInfo_proto_rawDesc = []byte{
	0x0a, 0x21, 0x46, 0x6c, 0x65, 0x75, 0x72, 0x46, 0x61, 0x69, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x46, 0x6c, 0x65, 0x75, 0x72, 0x46, 0x61, 0x69, 0x72, 0x43, 0x68,
	0x61, 0x70, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x21, 0x46, 0x6c, 0x65, 0x75, 0x72, 0x46, 0x61, 0x69, 0x72, 0x44, 0x75, 0x6e, 0x67, 0x65, 0x6f,
	0x6e, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1b, 0x46, 0x6c, 0x65, 0x75, 0x72, 0x46, 0x61, 0x69, 0x72, 0x4d, 0x69, 0x6e,
	0x69, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xdf, 0x05, 0x0a, 0x1b, 0x46, 0x6c, 0x65, 0x75, 0x72, 0x46, 0x61, 0x69, 0x72, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x2a, 0x0a, 0x11, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6c,
	0x6f, 0x73, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x12, 0x37, 0x0a, 0x18, 0x64,
	0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x5f, 0x70, 0x75, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x6f, 0x76,
	0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x64,
	0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x50, 0x75, 0x6e, 0x69, 0x73, 0x68, 0x4f, 0x76, 0x65, 0x72,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f,
	0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x62, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6f, 0x62, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x41, 0x0a, 0x11, 0x63, 0x68, 0x61,
	0x70, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0e,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x46, 0x6c, 0x65, 0x75, 0x72, 0x46, 0x61, 0x69, 0x72,
	0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x63, 0x68, 0x61,
	0x70, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x5d, 0x0a, 0x11,
	0x6d, 0x69, 0x6e, 0x69, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6d, 0x61,
	0x70, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x46, 0x6c, 0x65, 0x75, 0x72, 0x46,
	0x61, 0x69, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x6d, 0x69, 0x6e, 0x69,
	0x67, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x61, 0x70, 0x12, 0x70, 0x0a, 0x18, 0x64,
	0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e,
	0x46, 0x6c, 0x65, 0x75, 0x72, 0x46, 0x61, 0x69, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x44, 0x75, 0x6e, 0x67,
	0x65, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x61,
	0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x15, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x53,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x61, 0x70, 0x12, 0x2e, 0x0a,
	0x13, 0x69, 0x73, 0x5f, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x5f, 0x75, 0x6e, 0x6c, 0x6f,
	0x63, 0x6b, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x69, 0x73, 0x44, 0x75,
	0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x1a, 0x5a, 0x0a,
	0x14, 0x4d, 0x69, 0x6e, 0x69, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x61, 0x70,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x46, 0x6c, 0x65, 0x75, 0x72, 0x46, 0x61,
	0x69, 0x72, 0x4d, 0x69, 0x6e, 0x69, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x66, 0x0a, 0x1a, 0x44, 0x75, 0x6e,
	0x67, 0x65, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x4d,
	0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x32, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x46, 0x6c, 0x65, 0x75, 0x72,
	0x46, 0x61, 0x69, 0x72, 0x44, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_FleurFairActivityDetailInfo_proto_rawDescOnce sync.Once
	file_FleurFairActivityDetailInfo_proto_rawDescData = file_FleurFairActivityDetailInfo_proto_rawDesc
)

func file_FleurFairActivityDetailInfo_proto_rawDescGZIP() []byte {
	file_FleurFairActivityDetailInfo_proto_rawDescOnce.Do(func() {
		file_FleurFairActivityDetailInfo_proto_rawDescData = protoimpl.X.CompressGZIP(file_FleurFairActivityDetailInfo_proto_rawDescData)
	})
	return file_FleurFairActivityDetailInfo_proto_rawDescData
}

var file_FleurFairActivityDetailInfo_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_FleurFairActivityDetailInfo_proto_goTypes = []interface{}{
	(*FleurFairActivityDetailInfo)(nil), // 0: FleurFairActivityDetailInfo
	nil,                                 // 1: FleurFairActivityDetailInfo.MinigameInfoMapEntry
	nil,                                 // 2: FleurFairActivityDetailInfo.DungeonSectionInfoMapEntry
	(*FleurFairChapterInfo)(nil),        // 3: FleurFairChapterInfo
	(*FleurFairMinigameInfo)(nil),       // 4: FleurFairMinigameInfo
	(*FleurFairDungeonSectionInfo)(nil), // 5: FleurFairDungeonSectionInfo
}
var file_FleurFairActivityDetailInfo_proto_depIdxs = []int32{
	3, // 0: FleurFairActivityDetailInfo.chapter_info_list:type_name -> FleurFairChapterInfo
	1, // 1: FleurFairActivityDetailInfo.minigame_info_map:type_name -> FleurFairActivityDetailInfo.MinigameInfoMapEntry
	2, // 2: FleurFairActivityDetailInfo.dungeon_section_info_map:type_name -> FleurFairActivityDetailInfo.DungeonSectionInfoMapEntry
	4, // 3: FleurFairActivityDetailInfo.MinigameInfoMapEntry.value:type_name -> FleurFairMinigameInfo
	5, // 4: FleurFairActivityDetailInfo.DungeonSectionInfoMapEntry.value:type_name -> FleurFairDungeonSectionInfo
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_FleurFairActivityDetailInfo_proto_init() }
func file_FleurFairActivityDetailInfo_proto_init() {
	if File_FleurFairActivityDetailInfo_proto != nil {
		return
	}
	file_FleurFairChapterInfo_proto_init()
	file_FleurFairDungeonSectionInfo_proto_init()
	file_FleurFairMinigameInfo_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_FleurFairActivityDetailInfo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FleurFairActivityDetailInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_FleurFairActivityDetailInfo_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_FleurFairActivityDetailInfo_proto_goTypes,
		DependencyIndexes: file_FleurFairActivityDetailInfo_proto_depIdxs,
		MessageInfos:      file_FleurFairActivityDetailInfo_proto_msgTypes,
	}.Build()
	File_FleurFairActivityDetailInfo_proto = out.File
	file_FleurFairActivityDetailInfo_proto_rawDesc = nil
	file_FleurFairActivityDetailInfo_proto_goTypes = nil
	file_FleurFairActivityDetailInfo_proto_depIdxs = nil
}
